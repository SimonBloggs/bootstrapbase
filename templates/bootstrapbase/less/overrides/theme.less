/**
Out-of-the-box styling. Aimed at template developers. 

Webmasters/site managers should edit custom.less to further customize the template.
**/

/**
General layout styles.
**/
#content {
	.make-row();
	
	main {
		.make-xs-column(12);
	}
		
	main.no-sidebars {		
		.make-sm-column(12);
	}

	main.left-sidebar {
		.make-sm-column(12 - @sidebar1-sm-columns);
	}

	main.right-sidebar {
		.make-sm-column(12 - @sidebar2-sm-columns);
	}

	main.both-sidebars {
		.make-sm-column(12 - (@sidebar1-sm-columns + @sidebar2-sm-columns));
	}

	aside.sidebar {
		.make-xs-column(@sidebar-xs-columns);
	}
	
	aside#sidebar1 {
		.make-sm-column(@sidebar1-sm-columns);
	}
	
	aside#sidebar2 {
		.make-sm-column(@sidebar2-sm-columns);
	}
}

/**
General form layouts
**/


/**
Pagination; enable bootstrap pagination without changing Joomla paging layout.
**/
.pagination-list {
	.pagination;
}

[class^="icon-"] {
	.glyphicon;
}

.icon-first {	
	.glyphicon-fast-backward;
}

.icon-previous {	
	.glyphicon-backward;
}

.icon-next {
	.glyphicon-forward;
}

.icon-last {
	.glyphicon-fast-forward;
}

/**
mod_login
**/
.mod-login {		
	form {
		.form-horizontal; // or form-inline or remove for vertical form.
	
		#username-field, #password-field {
			label {
				.sr-only;	
			}
		}
		
		.form-field {
			margin-bottom: 15px;
			
			label {
				.form-horizontal > .control-label;			
			}
			
			input {
				&:extend(.input-group .form-control all);
				&:extend(.form-control all);
			}
		}
		
		#username-field, #password-field {
			.form-field-addon {
				&:extend(.input-group-addon all);
				
				.form-field-addon-icon {
					.glyphicon;
				}
			}
		}
		
		#username-field {
			.form-field-addon {
				.form-field-addon-icon {
					.glyphicon-user;
				}
			}
		}
		
		#password-field {
			.form-field-addon {
				.form-field-addon-icon {
					.glyphicon-lock;
				}
			}
		}
	}
}

/**
com_users
**/
.com-users {
	form {
		.form-horizontal;
		
		.form-field {
			.make-row();
			&:extend(.form-group);

			label {
				&:extend(.form-horizontal .control-label);
				.make-md-column(2);
			}
			
			.form-field-input {
				.make-md-column(6);

				input {
					&:extend(.form-control all);
				}
	
				.form-actions {
					.make-md-column-offset(2);
					.make-md-column(8);
				}
			}
			
			.form-field-help {
			 	@media(max-width: @screen-desktop) {
					.make-sm-column(12);
				}
				
				padding-top: 7px;
			}
		}
		
		#rememberme-field, #buttons-field {			
		 	@media(max-width: @screen-desktop) {
				.make-sm-column(12);
			}
			
		 	@media(min-width: @screen-desktop) {
				.make-md-column(10, @grid-gutter-width/3);
			}
			
			.make-md-column-offset(2);
		}
		
		#rememberme-field {			
			label {
				.make-md-column(12, 0);
				
				text-align: left;
				font-weight: normal;
			}
		}
			
		#buttons-field {
			button {
			@media(min-width: @screen-desktop) {
				.make-md-column(1); }
				.btn;
				.btn-primary;
			}

			.form-field-help {
			 	@media(max-width: @screen-desktop) {
					.make-sm-column(12, 0);
				}
			
			 	@media(min-width: @screen-desktop) {
					.make-md-column(11);
				}				
			}
		}
	}
		
	#help-links > ul {
		.make-md-column-offset(2);
		.nav;
		.nav-tabs;
		.nav-stacked;
	}
}

/**
error
**/
.error {
	.container;
	padding-top: 20px;
}

#errorboxbody {
	.jumbotron;
}